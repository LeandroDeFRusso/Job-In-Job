import oracledb from 'oracledb';

const createFormacaoTable = async () => {
  let connection;
  try {
    connection = await oracledb.getConnection();
    
    const tableExists = await connection.execute(
      `SELECT table_name FROM user_tables WHERE table_name = 'FORMACAO'`
    );

    if (tableExists.rows.length === 0) {
      await connection.execute(`
        CREATE TABLE FORMACAO (
          FORMACAO_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          UNIVERSIDADE VARCHAR2(100) NOT NULL,
          CURSO_GRADUACAO VARCHAR2(120) NOT NULL,
          DATA_INICIO DATE NOT NULL,
          DATA_TERMINO DATE NOT NULL
        )
      `);
      console.log('Tabela FORMACAO criada com sucesso.');
    } else {
      console.log('Tabela FORMACAO já existe.');
    }
  } catch (err) {
    console.error('Erro ao verificar ou criar a tabela:', err);
  } finally {
    if (connection) {
      await connection.close();
    }
  }
};

const createFormacao = async (universidade, cursoGraduacao, dataInicio, dataTermino) => {
  let connection;
  try {
    connection = await oracledb.getConnection();
    await connection.execute(
      `INSERT INTO FORMACAO (UNIVERSIDADE, CURSO_GRADUACAO, DATA_INICIO, DATA_TERMINO)
       VALUES (:universidade, :cursoGraduacao, TO_DATE(:dataInicio, 'YYYY-MM-DD'), TO_DATE(:dataTermino, 'YYYY-MM-DD'))`,
      { universidade, cursoGraduacao, dataInicio, dataTermino },
      { autoCommit: true }
    );
    console.log('Formacao inserido com sucesso.');
  } catch (err) {
    console.error('Erro ao inserir Formacao:', err);
  } finally {
    if (connection) {
      await connection.close();
    }
  }
};

const getAllFormacaos = async () => {
  let connection;
  try {
    connection = await oracledb.getConnection();
    const result = await connection.execute(
      `SELECT FORMACAO_ID, UNIVERSIDADE, CURSO_GRADUACAO, DATA_INICIO, DATA_TERINO FROM FORMACAO`,
      [],
      { outFormat: oracledb.OUT_FORMAT_OBJECT }
    );
    return result.rows;
  } catch (err) {
    console.error('Erro ao buscar Formacaos:', err);
    throw err;
  } finally {
    if (connection) {
      await connection.close();
    }
  }
};

const findByCurriculoId = async (curriculoId) => {
  let connection;
  
  try {
    connection = await oracledb.getConnection();
    const result = await connection.execute(
      `SELECT * FROM FORMACAO WHERE CURRICULO_FK = :curriculoId`,
      [curriculoId]
    );
    return result.rows;
  } catch (err) {
    console.error('Erro ao buscar formações:', err);
    throw err;
  } finally {
    if (connection) {
      try {
        await connection.close();
      } catch (err) {
        console.error('Erro ao fechar conexão:', err);
      }
    }
  }
};

const formacaoModel = {
  createFormacaoTable,
  createFormacao,
  getAllFormacaos,
  findByCurriculoId
};

export default formacaoModel;