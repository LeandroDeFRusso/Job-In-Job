import oracledb from 'oracledb';

const createFavoritoTable = async () => {
  let connection;
  try {
    connection = await oracledb.getConnection();
    
    const tableExists = await connection.execute(
      `SELECT table_name FROM user_tables WHERE table_name = 'FAVORITO'`
    );

    if (tableExists.rows.length === 0) {
      await connection.execute(`
        CREATE TABLE FAVORITO (
          FAVORITO_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          CURRICULO_FK NUMBER NOT NULL,
          CONSTRAINT FK_CURRICULO FOREIGN KEY (CURRICULO_FK) REFERENCES CURRICULO(CURRICULO_ID)
        )
      `);
      console.log('Tabela FAVORITO criada com sucesso.');
    } else {
      console.log('Tabela FAVORITO jÃ¡ existe.');
    }
  } catch (err) {
    console.error('Erro ao verificar ou criar a tabela:', err);
  } finally {
    if (connection) {
      await connection.close();
    }
  }
};

const createFavorito = async (curriculoFk) => {
  let connection;
  try {
    connection = await oracledb.getConnection();
    await connection.execute(
      `INSERT INTO FAVORITO (CURRICULO_FK)
       VALUES (:curriculoFk)`,
      { curriculoFk },
      { autoCommit: true }
    );
    console.log('Favorito inserido com sucesso.');
  } catch (err) {
    console.error('Erro ao inserir Favorito:', err);
  } finally {
    if (connection) {
      await connection.close();
    }
  }
};

const getAllFavoritos = async () => {
  let connection;
  try {
    connection = await oracledb.getConnection();
    const result = await connection.execute(
      `SELECT FAVORITO_ID, CURRICULO_FK FROM FAVORITO`,
      [],
      { outFormat: oracledb.OUT_FORMAT_OBJECT }
    );
    return result.rows;
  } catch (err) {
    console.error('Erro ao buscar Favoritos:', err);
    throw err;
  } finally {
    if (connection) {
      await connection.close();
    }
  }
};

const favoritoModel = {
  createFavoritoTable,
  createFavorito,
  getAllFavoritos
};

export default favoritoModel;